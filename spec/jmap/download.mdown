## Downloading binary data

After completing authentication, the client will receive a *downloadUrl* as part of the response. This is in [@!RFC6570] URI Template (level 1) format. The URL MUST contain a variable called `blobId`, MAY contain a variable called `accountId`, and SHOULD contain a variable called `name`.

The client may use this template in combination with an accountId (if required in the URL template) and blobId to download any binary data (files) referenced by other objects. Since a blob is not associated with a particular name, the template SHOULD allow a name to be substituted in as well; the server will return this as the filename if it sets a `Content-Disposition` header.

To download the data the client makes an authenticated GET request to the download URL with the appropriate variables substituted in, and then follows any redirects. The client SHOULD send an `Accept` header with the content type they would like the server to return for the file. The `Content-Type` header of a successful response SHOULD be set to the type as requested in the `Accept` header by the client, or `application/octet-stream` if unknown and no `Accept` header given.

In situations where it's not easy to authenticate the download request (e.g.: when downloading a file through a link in a HTML document), the client MAY use a signed GET request (see the authentication chapter for how to issue a signed request). Instead of specifying an `Accept` header, the client SHOULD add an `accept` query parameter to the signed URL, with the value being the content type to use for the response.
