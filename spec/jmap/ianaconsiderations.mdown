# IANA Considerations

## Assignment of jmap Service Name

IANA will assign the 'jmap' service name in the 'Service Name and Transport Protocol Port Number Registry' [@!RFC6335].

Service Name: jmap

Transport Protocol(s): tcp

Assignee: IESG

Contact: IETF Chair

Description: JSON Meta Application Protocol

Reference: this document

Assignment Notes: this service name was previously assigned under the name *JSON Mail Access Protocol*. This will be de-assigned and re-assigned with the approval of the previous assignee.

## Registration of Well-known URI suffix for JMAP

IANA will register the following well-known URI suffix for JMAP as described in [@!RFC5785]:

URI Suffix: jmap

Change Controller: IETF

Specification Document: this document, section 2.1.

## Registration of the jmap URN Sub-namespace

IANA will register the following URN sub-namespace in the "IETF URN Sub-namespace for Registered Protocol Parameter Identifiers" registry as described in [@!RFC3553].

Registered Parameter Identifier: jmap

Reference: this document, next section

IANA Registry Reference: {insert IANA registry URL for registry in next section, upon approval}

## Creation of "JMAP capabilities" registry

IANA will create a registry for JMAP capabilities as described in section 2.1. JMAP capabilities are advertised in the *capabilities* property of the *JMAP Session* resource. They are used to extend the functionality of a JMAP server. A capability is referenced by a URI. The JMAP capability URI can be a URN starting with `urn:ietf:params:jmap:` plus a unique suffix which is the index value in the jmap URN sub-namespace. Registration of a JMAP capability with another form of URI has no impact on the jmap URN sub-namespace.

This registry follows the expert review process unless the "intended use" field is *common* or *placeholder* in which case registration follows the specification required process.

A JMAP capability registration can have an intended use of *common*, *placeholder*, *limited*, or *obsolete*. IANA will list common use registrations prominently and separately from those with other intended use values.

The JMAP capability registration procedure is not a formal standards process, but rather an administrative procedure intended to allow community comment and sanity checking without excessive time delay.

A *placeholder* registration reserves part of the jmap urn namespace for another purpose but is typically not included in the *capabilities* property of the *JMAP Session* resource.

### Preliminary Community Review

Notice of a potential JMAP common use registration SHOULD be sent to the jmap@ietf.org mailing list for review. This mailing list is appropriate to solicit community feedback on a proposed JMAP capability. Registrations that are not intended for common use MAY be sent to the list for review as well; doing so is entirely OPTIONAL, but is encouraged.

The intent of the public posting to this list is to solicit comments and feedback on the choice of capability name, the unambiguity of the specification document, and a review of any interoperability or security considerations. The submitter may submit a revised registration proposal or abandon the registration completely and at any time.

### Submit Request to IANA

Registration requests can be sent to iana@iana.org.

### Designated Expert Review

For a limited use registration, the designated expert's (DE) primary concern is preventing name collisions and encouraging the submitter to document security and privacy considerations; a published specification is not required. For a common use registration, the DE is expected to confirm that suitable documentation as described in [@!RFC8126], Section 4.6, is available. The DE should also verify the capability does not conflict with work that is active or already published within the IETF.

Before a period of 30 days has passed, the DE will either approve or deny the registration request and publish a notice of the decision to the JMAP WG mailing list or its successor, as well as informing IANA. A denial notice must be justified by an explanation, and in the cases where it is possible, concrete suggestions on how the request can be modified so as to become acceptable should be provided. 

### Change Procedures

Once a JMAP capability has been published by the IANA, the change controller may request a change to its definition. The same procedure that would be appropriate for the original registration request is used to process a change request.

JMAP capability registrations may not be deleted; capabilities that are no longer believed appropriate for use can be declared obsolete by a change to their "intended use" field; such capabilities will be clearly marked in the lists published by the IANA.

Significant changes to a capability's definition should be requested only when there are serious omissions or errors in the published specification. When review is required, a change request may be denied if it renders entities that were valid under the previous definition invalid under the new definition.

The owner of a JMAP capability may pass responsibility to another person or agency by informing the IANA; this can be done without discussion or review.

The IESG may reassign responsibility for a JMAP capability. The most common case of this will be to enable changes to be made to capabilities where the author of the registration has died, moved out of contact, or is otherwise unable to make changes that are important to the community.

### JMAP Capabilities Registry Template:

Capability name: (see capability property in section 2)

Specification document:

Intended use: (one of common, limited, or obsolete)

Change controller: (*IETF* for standards-track/BCP RFCs)

Security and privacy considerations:

### Initial Registration for JMAP core

Capability Name: `urn:ietf:params:jmap:core`

Specification document: this document, section 2

Intended use: common

Change Controller: IETF

Security and privacy considerations: this document, section 7.

### Registration for JMAP error placeholder in JMAP Capabilities Registry

Capability Name: `urn:ietf:params:jmap:error:'

Specification document: this document, next section.

Intended use: placeholder

Change Controller: IETF

Security and privacy considerations: this document, section 7.

## Creation of "JMAP Error Codes" Registry

IANA will create a registry for JMAP error codes. JMAP error codes appear in the "type" member of a JSON problem details object (as described in section 3.6.1), in the "type" member in a JMAP error object (as described in section 3.6.2), or the "type" member of a JMAP method-specific error object (such as SetError in section 4.3). When used in a problem details object, the prefix 'urn:ietf:params:jmap:error:' is always included, and when used in JMAP objects, the prefix is always omitted.

This registry follows the expert review process. Preliminary community review for this registry follows the same procedures as the JMAP capabilities registry but is optional. The change procedures for this registry are the same as the change procedures for the JMAP capabilities registry.

### Designated Expert Review

The designated expert should review the following aspects of the registration:

1. Verify the error code does not conflict with existing names.

2. Verify the error code follows the syntax limitations (does not require URI encoding).

3. Encourage the error code to follow the naming convention of previously registered errors.

4. Encourage description of client behaviors that are recommended in response to the error code. These may distinguish the error code from other error codes.

5. Encourage description of when the server should issue the error as opposed to some other error code.

6. Encourage the submitter to note any security considerations associated with the error, if any. For example, an error code that might disclose existence of data the authenticated user does not have permission to know about.

Steps 3-6 are meant to promote a higher-quality registry. However, the expert is encouraged to approve any registration that would not actively harm JMAP interoperability to make this a relatively light-weight process.

### JMAP Error Codes Registry Template:

JMAP Error Code:

Intended use: (one of *common*, *limited*, *obsolete*)

Change Controller: (*IETF* for standards-track/BCP RFCs)

Description or Reference:

### Initial JMAP Error Codes Registry

| JMAP Error Code | Intended Use | Change Controller | Description or Reference |
| --- | --- | --- | --- |
| accountNotFound | common | IETF | RFC XXXX section 3.6.2 |
| accountNotSupportedByMethod | common | IETF | RFC XXXX section 3.6.2 |
| accountReadOnly | common | IETF | RFC XXXX section 3.6.2 |
| anchorNotFound | common | IETF | RFC XXXX section 4.4 |
| cannotCalculateChanges | common | IETF | RFC XXXX sections 4.2 and 4.5 |
| forbidden | common | IETF | RFC XXXX sections 3.6.2, 4.3, and 6.2.1 |
| fromAccountNotFound | common | IETF | RFC XXXX sections 5.3 |
| invalidArguments | common | IETF | RFC XXXX section 3.6.2 |
| invalidPatch | common | IETF | RFC XXXX section 4.3 |
| invalidProperties | common | IETF | RFC XXXX section 4.3 |
| invalidUrl | common | IETF | RFC XXXX section 6.2.1 |
| notFound | common | IETF | RFC XXXX section 4.3 |
| notjson | common | IETF | RFC XXXX section 3.6.1 |
| notrequest | common | IETF | RFC XXXX section 3.6.1 |
| overQuota | common | IETF | RFC XXXX section 4.3 |
| rateLimit | common | IETF | RFC XXXX section 4.3 |
| requestTooLarge | common | IETF | RFC XXXX sections 4.1 and 4.3 |
| resultReference | common | IETF | RFC XXXX section 3.7 |
| serverFail | common | IETF | RFC XXXX section 3.6.2 |
| serverPartialFail | limited | IETF | RFC XXXX section 3.6.2 |
| serverUnavailable | common | IETF | RFC XXXX section 3.6.2 |
| stateMismatch | common | IETF | RFC XXXX section 4.3 |
| toAccountNotFound | common | IETF | RFC XXXX section 5.3 |
| tooManyChanges | common | IETF | RFC XXXX section 4.6 |
| unknowncapability | common | IETF | RFC XXXX section 3.6.1 |
| unknownMethod | common | IETF | RFC XXXX section 3.6.2 |
| unsupportedFilter | common | IETF | RFC XXXX section 4.4 |
| unsupportedSort | common | IETF | RFC XXXX section 4.4 |
| willDestroy | common | IETF | RFC XXXX section 4.3 |
